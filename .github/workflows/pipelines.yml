name: CI/CD Pipelines

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test
  build-tarballs:
    name: Build tarballs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build tarballs
        run: yarn build
      - name: Upload tarballs
        uses: actions/upload-artifact@v2
        with:
          name: wio-tarballs
          path: dist/*/
  build-installers:
    name: Build installer for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: macos
            os: macos-latest
          - platform: win
            os: ubuntu-latest
          - platform: deb
            os: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install build tool for Windows
        if: ${{ matrix.platform == 'win' }}
        run: |
          sudo apt-get update
          sudo apt-get install nsis
      - name: Build installer
        run: sudo yarn build:${{ matrix.platform }}
      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: wio-${{ matrix.platform }}-installer
          path: dist/${{ matrix.platform }}/
  publish_to_npm:
    name: Publish to npm
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, build-tarballs, build-installers]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
#      - name: Publish to npm
#        run: yarn publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#  publish_to_github_packages:
#    name: Publish to GitHub packages
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs: [ test, build-tarballs, build-installers ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 14
#          registry-url: 'https://npm.pkg.github.com'
#          scope: '@igassmann'
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#      - name: Publish to GitHub Packages
#        run: npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ github.token }}
  publish_tarballs:
    name: Publish tarballs
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, build-tarballs, build-installers]
    runs-on: ubuntu-latest
    steps:
      - name: Download previously-built tarballs
        id: download
        uses: actions/download-artifact@v2
        with:
          name: wio-tarballs
#      - name: Upload tarballs to a GitHub release
#        uses: svenstaro/upload-release-action@2.2.1
#        with:
#          repo_token: ${{ github.token }}
#          tag: ${{ github.ref }}
#          file: '*'
#          file_glob: true
#          overwrite: true
  publish_installers:
    name: Publish installer for ${{ matrix.platform }}
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, build-tarballs, build-installers]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [macos, win, deb]
      fail-fast: false
      max-parallel: 1
    steps:
      - name: Download ${{ matrix.platform }} previously-built installer
        id: download
        uses: actions/download-artifact@v2
        with:
          name: wio-${{ matrix.platform }}-installer
      - name: Upload installer to a GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ github.token }}
          tag: ${{ github.ref }}
          file: '*.{deb,pkg,exe}'
          file_glob: true
          overwrite: true
